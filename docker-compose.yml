services:
  db:
    container_name: postgresdb
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: capstone
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Zaccaro
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - intrabooking_net
  app:
    container_name: intrabooking-app
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8080:8080"
    networks:
      - intrabooking_net
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/capstone
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Zaccaro

      APP_DATASOURCE_MAX-POOL: "20"
      APP_DATASOURCE_MIN-IDLE: "5"
      APP_DATASOURCE_CONNECTION-TIMEOUT: "10000"
      APP_DATASOURCE_IDLE-TIMEOUT: "300000"
      APP_DATASOURCE_MAX-LIFETIME: "1800000"
      APP_DATASOURCE_LEAK-DETECTION-THRESHOLD: "300000"

      HEALTH_ALLOWED_IPS: "127.0.0.1,0:0:0:0:0:0:0:1,0.0.0.0/0"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-rules/:/etc/prometheus/rules/:ro
    depends_on:
      - app
    networks:
      - intrabooking_net
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    depends_on:
      - prometheus
    networks:
      - intrabooking_net
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - intrabooking_net
volumes:
  postgres-data:
  grafana-data:
