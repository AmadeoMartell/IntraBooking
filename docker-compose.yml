services:
  db:
    container_name: postgresdb
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - intrabooking_net

  app:
    container_name: intrabooking-app
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

      APP_DATASOURCE_MAX-POOL: "${APP_DATASOURCE_MAX_POOL}"
      APP_DATASOURCE_MIN-IDLE: "${APP_DATASOURCE_MIN_IDLE}"
      APP_DATASOURCE_CONNECTION-TIMEOUT: "${APP_DATASOURCE_CONNECTION_TIMEOUT}"
      APP_DATASOURCE_IDLE-TIMEOUT: "${APP_DATASOURCE_IDLE_TIMEOUT}"
      APP_DATASOURCE_MAX-LIFETIME: "${APP_DATASOURCE_MAX_LIFETIME}"
      APP_DATASOURCE_LEAK-DETECTION-THRESHOLD: "${APP_DATASOURCE_LEAK_DETECTION_THRESHOLD}"

      HEALTH_ALLOWED_IPS: "${HEALTH_ALLOWED_IPS}"
    networks:
      - intrabooking_net

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-rules/:/etc/prometheus/rules/:ro
    depends_on:
      - app
    networks:
      - intrabooking_net

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:latest
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    depends_on:
      - prometheus
    networks:
      - intrabooking_net

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "${GF_SECURITY_ADMIN_PASSWORD}"
      GF_USERS_ALLOW_SIGN_UP: "${GF_USERS_ALLOW_SIGN_UP}"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - intrabooking_net

volumes:
  postgres-data:
  grafana-data:

networks:
  intrabooking_net:
    external: true
